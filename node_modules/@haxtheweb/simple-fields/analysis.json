{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`simple-fields-container`\nProgressive enhanced container HTML fields\nwith label, description, error massage,\nand aria-invalid functionality if needed.",
      "summary": "",
      "path": "lib/simple-fields-container.js",
      "properties": [],
      "methods": [],
      "staticMethods": [],
      "demos": [
        {
          "url": "./demo/container.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 1062,
          "column": 0
        },
        "end": {
          "line": 1064,
          "column": 4
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "SimpleFieldsContainer",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    },
    {
      "description": "`simple-fields-array-item`\nan accessible expand collapse\n\n### Styling\n\n`<simple-fields-array-item>` provides the following custom properties\nfor styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--simple-fields-array-item-margin` | margin around simple-fields-array-item | 15px 0\n`--simple-fields-array-item-border` | border around simple-fields-array-item | 1px solid\n`--simple-fields-array-item-horizontal-padding` | horizontal padding inside simple-fields-array-item | 16px\n`--simple-fields-array-item-horizontal-padding-left` | left padding inside simple-fields-array-item | `--simple-fields-array-item-horizontal-padding`\n`--simple-fields-array-item-horizontal-padding-right` | right padding inside simple-fields-array-item | `--simple-fields-array-item-horizontal-padding`\n`--simple-fields-array-item-vertical-padding` | vertical padding inside simple-fields-array-item | 16px\n`--simple-fields-array-item-horizontal-padding-top` | top padding inside simple-fields-array-item | `--simple-fields-array-item-vertical-padding`\n`--simple-fields-array-item-horizontal-padding-bottom` | bottom padding inside simple-fields-array-item | --simple-fields-array-item-vertical-padding\n`--simple-fields-array-item-border-between` | border between simple-fields-array-item heading and content | --simple-fields-array-item-border\n`--simple-fields-array-item-heading-font-weight` | font-weight for simple-fields-array-item heading | bold\n`--simple-fields-array-item-heading-color` | text color for simple-fields-array-item heading | unset\n`--simple-fields-array-item-heading-background-color` | background-color for simple-fields-array-item heading | unset",
      "summary": "",
      "path": "lib/simple-fields-array-item.js",
      "properties": [
        {
          "name": "isArrayItem",
          "type": "?",
          "description": "ensure we can indentify this and an element extending it as an array item",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 387,
              "column": 2
            },
            "end": {
              "line": 389,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "slots",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 540,
              "column": 2
            },
            "end": {
              "line": 544,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "expanded",
          "type": "boolean | null | undefined",
          "description": "is disabled?",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 302,
              "column": 6
            },
            "end": {
              "line": 305,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hideReorder",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 306,
              "column": 6
            },
            "end": {
              "line": 310,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hideDuplicate",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 311,
              "column": 6
            },
            "end": {
              "line": 315,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "is disabled?",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 319,
              "column": 6
            },
            "end": {
              "line": 323,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "draggable",
          "type": "string | null | undefined",
          "description": "is disabled?",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 327,
              "column": 6
            },
            "end": {
              "line": 330,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "preview",
          "type": "boolean | null | undefined",
          "description": "is disabled?",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 334,
              "column": 6
            },
            "end": {
              "line": 336,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "previewBy",
          "type": "Array | null | undefined",
          "description": "fields to preview by",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 340,
              "column": 6
            },
            "end": {
              "line": 344,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "responsiveSize",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 345,
              "column": 6
            },
            "end": {
              "line": 349,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "__dragging",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 350,
              "column": 6
            },
            "end": {
              "line": 352,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "__dropAccepts",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 353,
              "column": 6
            },
            "end": {
              "line": 355,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "__prev",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 356,
              "column": 6
            },
            "end": {
              "line": 358,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "__next",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 359,
              "column": 6
            },
            "end": {
              "line": 361,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 201,
              "column": 2
            },
            "end": {
              "line": 291,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_dragMoving",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 391,
              "column": 2
            },
            "end": {
              "line": 394,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dragEnd",
          "description": "When we end dragging ensure we remove the mover class.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 398,
              "column": 2
            },
            "end": {
              "line": 403,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dragStart",
          "description": "Drag start so we know what target to set",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 407,
              "column": 2
            },
            "end": {
              "line": 414,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dragEnter",
          "description": "Enter an element, meaning we've over it while dragging",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 418,
              "column": 2
            },
            "end": {
              "line": 420,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dragLeave",
          "description": "Leaving an element while dragging.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 424,
              "column": 2
            },
            "end": {
              "line": 426,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dragDrop",
          "description": "Drop an item onto another",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 430,
              "column": 2
            },
            "end": {
              "line": 432,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_moveUp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 433,
              "column": 2
            },
            "end": {
              "line": 437,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_moveDown",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 438,
              "column": 2
            },
            "end": {
              "line": 442,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_moveBefore",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 443,
              "column": 2
            },
            "end": {
              "line": 462,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            },
            {
              "name": "target"
            },
            {
              "name": "ref"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setDragging",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 463,
              "column": 2
            },
            "end": {
              "line": 482,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "show",
              "defaultValue": "true"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setDropzone",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 483,
              "column": 2
            },
            "end": {
              "line": 489,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "show",
              "defaultValue": "true"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 490,
              "column": 2
            },
            "end": {
              "line": 507,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "firstUpdated",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 508,
              "column": 2
            },
            "end": {
              "line": 529,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "updated",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 530,
              "column": 2
            },
            "end": {
              "line": 539,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "toggle",
          "description": "handles individual toggling",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 548,
              "column": 2
            },
            "end": {
              "line": 550,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleCopy",
          "description": "Fires add event",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 556,
              "column": 2
            },
            "end": {
              "line": 565,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleRemove",
          "description": "Fires add event",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 571,
              "column": 2
            },
            "end": {
              "line": 580,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disconnectedCallback",
          "description": "Let the group know that this is gone.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 585,
              "column": 2
            },
            "end": {
              "line": 600,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "./demo/schema.html",
          "description": "Schema"
        },
        {
          "url": "./demo/form.html",
          "description": "Form"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 41,
          "column": 0
        },
        "end": {
          "line": 601,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "SimpleFieldsArrayItem",
      "attributes": [
        {
          "name": "expanded",
          "description": "is disabled?",
          "sourceRange": {
            "start": {
              "line": 302,
              "column": 6
            },
            "end": {
              "line": 305,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hide-reorder",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 306,
              "column": 6
            },
            "end": {
              "line": 310,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hide-duplicate",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 311,
              "column": 6
            },
            "end": {
              "line": 315,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "is disabled?",
          "sourceRange": {
            "start": {
              "line": 319,
              "column": 6
            },
            "end": {
              "line": 323,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "draggable",
          "description": "is disabled?",
          "sourceRange": {
            "start": {
              "line": 327,
              "column": 6
            },
            "end": {
              "line": 330,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "preview",
          "description": "is disabled?",
          "sourceRange": {
            "start": {
              "line": 334,
              "column": 6
            },
            "end": {
              "line": 336,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "preview-by",
          "description": "fields to preview by",
          "sourceRange": {
            "start": {
              "line": 340,
              "column": 6
            },
            "end": {
              "line": 344,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "responsive-size",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 345,
              "column": 6
            },
            "end": {
              "line": 349,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "add",
          "description": "Fires add event",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "add-item",
          "description": "Fires when constructed, so that parent radio group can listen for it.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "remoive-item",
          "description": "Fires when detatched, so that parent radio group will no longer listen for it.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "responsive-element",
          "description": "needs the size of parent container to add responsive styling",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    },
    {
      "description": "`simple-fields-array` takes in a JSON schema of type array and builds a form,\nexposing a `value` property that represents an array described by the schema.",
      "summary": "",
      "path": "lib/simple-fields-array.js",
      "properties": [
        {
          "name": "fields",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 2
            },
            "end": {
              "line": 133,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "count",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 6
            },
            "end": {
              "line": 53,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "disableAdd",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 6
            },
            "end": {
              "line": 58,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hideExpand",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hideReorder",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 6
            },
            "end": {
              "line": 68,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hideDuplicate",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "expanded",
          "type": "boolean | null | undefined",
          "description": "icon when expanded",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 6
            },
            "end": {
              "line": 80,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "responsiveSize",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 81,
              "column": 6
            },
            "end": {
              "line": 85,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "__dragging",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 6
            },
            "end": {
              "line": 88,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 2
            },
            "end": {
              "line": 95,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "firstUpdated",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 2
            },
            "end": {
              "line": 165,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "updated",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 2
            },
            "end": {
              "line": 186,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "buildItem",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 2
            },
            "end": {
              "line": 200,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "_handleAdd",
          "description": "Fires add event",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 2
            },
            "end": {
              "line": 212,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleRemove",
          "description": "Fires add event",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 218,
              "column": 2
            },
            "end": {
              "line": 226,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "collapse",
          "description": "Collapses the content",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 230,
              "column": 2
            },
            "end": {
              "line": 232,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "expand",
          "description": "Expands the content",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 237,
              "column": 2
            },
            "end": {
              "line": 239,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "focus",
          "description": "handles focus",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 245,
              "column": 2
            },
            "end": {
              "line": 259,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "index"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "toggle",
          "description": "Toggles based on mode",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 265,
              "column": 2
            },
            "end": {
              "line": 268,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "open",
              "type": "boolean",
              "defaultValue": "!this.expanded",
              "description": "whether to toggle open"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleToggle",
          "description": "Fires toggling events",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 273,
              "column": 2
            },
            "end": {
              "line": 307,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 308,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "simple-fields-fieldset",
      "name": "SimpleFieldsArray",
      "attributes": [
        {
          "name": "count",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 6
            },
            "end": {
              "line": 53,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "disable-add",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 6
            },
            "end": {
              "line": 58,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hide-expand",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hide-reorder",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 6
            },
            "end": {
              "line": 68,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hide-duplicate",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "expanded",
          "description": "icon when expanded",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 6
            },
            "end": {
              "line": 80,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "responsive-size",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 81,
              "column": 6
            },
            "end": {
              "line": 85,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "add",
          "description": "Fires add event",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "collapse",
          "description": "Fires when collapsed.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "expand",
          "description": "Fires when expanded.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "responsive-element",
          "description": "needs the size of parent container to add responsive styling",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "toggle",
          "description": "Fires when toggled.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    },
    {
      "description": "`simple-fields-field`\nHTML inputs (excluding submit, reset, button, and image)\nwith label, description, error massage,\nand aria-invalid functionality if needed.",
      "summary": "",
      "path": "lib/simple-fields-field.js",
      "properties": [],
      "methods": [],
      "staticMethods": [],
      "demos": [
        {
          "url": "./demo/field.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 1093,
          "column": 0
        },
        "end": {
          "line": 1093,
          "column": 73
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "SimpleFieldsField",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    },
    {
      "description": "",
      "summary": "",
      "path": "lib/simple-tag-lite.js",
      "properties": [],
      "methods": [],
      "staticMethods": [],
      "demos": [
        {
          "url": "./demo/tags.html",
          "description": "Demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 10,
          "column": 34
        },
        "end": {
          "line": 141,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "SimpleTagLiteSuper",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    },
    {
      "description": "`simple-fields-tag-list`\ninput tags and validate an array of input\ncan return as a string or object based on\nrequirements of the implementing element",
      "summary": "",
      "path": "lib/simple-fields-tag-list.js",
      "properties": [
        {
          "name": "prefixTemplate",
          "type": "object",
          "description": "template for slotted or shadow DOM prefix",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 137,
              "column": 2
            },
            "end": {
              "line": 154,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "slottedFieldObserver",
          "type": "?",
          "description": "overridden mutation observer",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 272,
              "column": 2
            },
            "end": {
              "line": 272,
              "column": 31
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "requiredMessage",
          "type": "string | null | undefined",
          "description": "error message when field is required and has no value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 6
            },
            "end": {
              "line": 76,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "tagList",
          "type": "Array | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 6
            },
            "end": {
              "line": 80,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "value",
          "type": "?",
          "description": "Current value of the form control. Submitted with the form as part of a name/value pair.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 6
            },
            "end": {
              "line": 86,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 6
            },
            "end": {
              "line": 89,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "singleValueOnly",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 6
            },
            "end": {
              "line": 93,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "firstUpdated",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 2
            },
            "end": {
              "line": 114,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "updated",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 116,
              "column": 2
            },
            "end": {
              "line": 123,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleGlobalTagDrop",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 124,
              "column": 2
            },
            "end": {
              "line": 126,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleGlobalTagDrag",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 2
            },
            "end": {
              "line": 129,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "getInput",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 155,
              "column": 2
            },
            "end": {
              "line": 183,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "removeTag",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 2
            },
            "end": {
              "line": 193,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleDragLeave",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 194,
              "column": 2
            },
            "end": {
              "line": 197,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleDragEnter",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 198,
              "column": 2
            },
            "end": {
              "line": 202,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleDragDrop",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 203,
              "column": 2
            },
            "end": {
              "line": 223,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleKeydown",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 224,
              "column": 2
            },
            "end": {
              "line": 231,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleKeyup",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 232,
              "column": 2
            },
            "end": {
              "line": 236,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateTaglist",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 237,
              "column": 2
            },
            "end": {
              "line": 265,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "validate",
          "description": "checks validation constraints and returns error data",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 278,
              "column": 2
            },
            "end": {
              "line": 285,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_fireValueChanged",
          "description": "fires when value changes",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 291,
              "column": 2
            },
            "end": {
              "line": 303,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_fireTagListChanged",
          "description": "fires when tagList changes",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 308,
              "column": 2
            },
            "end": {
              "line": 317,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onFocusout",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 318,
              "column": 2
            },
            "end": {
              "line": 323,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_observeAndListen",
          "description": "listens for focusout\noverridden for fields in shadow DOM",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 330,
              "column": 2
            },
            "end": {
              "line": 340,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "init",
              "defaultValue": "true"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 342,
              "column": 2
            },
            "end": {
              "line": 354,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 356,
              "column": 2
            },
            "end": {
              "line": 359,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "./demo/field.html",
          "description": ""
        },
        {
          "url": "./demo/tags.html",
          "description": "Demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 360,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "SimpleFieldsTagList",
      "attributes": [
        {
          "name": "required-message",
          "description": "error message when field is required and has no value",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 6
            },
            "end": {
              "line": 76,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "tag-list",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 6
            },
            "end": {
              "line": 80,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "value",
          "description": "Current value of the form control. Submitted with the form as part of a name/value pair.",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 6
            },
            "end": {
              "line": 86,
              "column": 7
            }
          },
          "metadata": {}
        },
        {
          "name": "label",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 6
            },
            "end": {
              "line": 89,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "single-value-only",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 6
            },
            "end": {
              "line": 93,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "simple-fields-tag-list-changed",
          "description": "fires when tagList changes",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "fires when value changes",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    },
    {
      "description": "`simple-fields-combo`\ninput tags and validate an array of input\ncan return as a string or object based on\nrequirements of the implementing element",
      "summary": "",
      "path": "lib/simple-fields-combo.js",
      "properties": [
        {
          "name": "stateInfo",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 2
            },
            "end": {
              "line": 199,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "fieldElementTag",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 2
            },
            "end": {
              "line": 202,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "inputTemplate",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 238,
              "column": 2
            },
            "end": {
              "line": 269,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "expandButtonTemplate",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 271,
              "column": 2
            },
            "end": {
              "line": 283,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "listboxTemplate",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 285,
              "column": 2
            },
            "end": {
              "line": 304,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "listboxInnerTemplate",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 306,
              "column": 2
            },
            "end": {
              "line": 310,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "isListboxHidden",
          "type": "?",
          "description": "determines if listbox is hidden",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 318,
              "column": 2
            },
            "end": {
              "line": 320,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "fieldMainTemplate",
          "type": "object",
          "description": "template label and field",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 350,
              "column": 2
            },
            "end": {
              "line": 364,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "hasOptions",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 366,
              "column": 2
            },
            "end": {
              "line": 368,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "sortedOptions",
          "type": "?",
          "description": "gets a sorted list of option",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 715,
              "column": 2
            },
            "end": {
              "line": 725,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "previousItem",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 842,
              "column": 2
            },
            "end": {
              "line": 854,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "nextItem",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 855,
              "column": 2
            },
            "end": {
              "line": 865,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "listbox",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 866,
              "column": 2
            },
            "end": {
              "line": 873,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "input",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 874,
              "column": 2
            },
            "end": {
              "line": 882,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "keyCode",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 883,
              "column": 2
            },
            "end": {
              "line": 899,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "activeDescendant",
          "type": "string | null | undefined",
          "description": "id of active option",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 6
            },
            "end": {
              "line": 108,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "alignRight",
          "type": "boolean | null | undefined",
          "description": "whether listbox is aligned on the right edge",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 6
            },
            "end": {
              "line": 116,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "expanded",
          "type": "boolean | null | undefined",
          "description": "whether listbox is expanded",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 6
            },
            "end": {
              "line": 123,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "justify",
          "type": "boolean | null | undefined",
          "description": "whether listbox is full-width",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 6
            },
            "end": {
              "line": 130,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "filter",
          "type": "string | null | undefined",
          "description": "input text to filter listbox options",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 6
            },
            "end": {
              "line": 136,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "filteredOptions",
          "type": "Array | null | undefined",
          "description": "aray of filtered listbox options",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "inputFocus",
          "type": "boolean | null | undefined",
          "description": "whether input has focus",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 6
            },
            "end": {
              "line": 148,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "inputHover",
          "type": "boolean | null | undefined",
          "description": "whether input is hovered",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 6
            },
            "end": {
              "line": 154,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "listFocus",
          "type": "boolean | null | undefined",
          "description": "whether list has focus",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 6
            },
            "end": {
              "line": 160,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "listHover",
          "type": "boolean | null | undefined",
          "description": "whether list is hovered",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 6
            },
            "end": {
              "line": 166,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hoveredOption",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 6
            },
            "end": {
              "line": 169,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "firstUpdated",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 204,
              "column": 2
            },
            "end": {
              "line": 208,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "updated",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 210,
              "column": 2
            },
            "end": {
              "line": 219,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "fieldValueChanged",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 221,
              "column": 2
            },
            "end": {
              "line": 225,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "autocompleteChanged",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 227,
              "column": 2
            },
            "end": {
              "line": 236,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "getListItem",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 322,
              "column": 2
            },
            "end": {
              "line": 336,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "option"
            }
          ]
        },
        {
          "name": "getListItemInner",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 338,
              "column": 2
            },
            "end": {
              "line": 340,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "option"
            }
          ]
        },
        {
          "name": "setActiveDescendant",
          "description": "sets aria-activeDescendant",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 375,
              "column": 2
            },
            "end": {
              "line": 381,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "option",
              "type": "object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setValue",
          "description": "sets the combobox value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 388,
              "column": 2
            },
            "end": {
              "line": 394,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "*"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setOption",
          "description": "sets the selected option",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 402,
              "column": 2
            },
            "end": {
              "line": 428,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "option",
              "type": "object"
            },
            {
              "name": "flag",
              "type": "string",
              "defaultValue": "false"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setVisualFocusTextbox",
          "description": "switches focus to input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 434,
              "column": 2
            },
            "end": {
              "line": 438,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setVisualFocusListbox",
          "description": "switches focus to listbox",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 444,
              "column": 2
            },
            "end": {
              "line": 448,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "removeVisualFocusAll",
          "description": "switches focus from text box and listbox",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 454,
              "column": 2
            },
            "end": {
              "line": 459,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onButtonClick",
          "description": "handles the dropdown button click",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 466,
              "column": 2
            },
            "end": {
              "line": 474,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onInputClick",
          "description": "handles input click",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 481,
              "column": 2
            },
            "end": {
              "line": 487,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onInputBlur",
          "description": "handles input blur",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 494,
              "column": 2
            },
            "end": {
              "line": 500,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onInputPaste",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 502,
              "column": 2
            },
            "end": {
              "line": 507,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onInputFocus",
          "description": "handles input focus",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 514,
              "column": 2
            },
            "end": {
              "line": 518,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onInputKeydown",
          "description": "handles input keydown",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 525,
              "column": 2
            },
            "end": {
              "line": 597,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onInputKeyup",
          "description": "handles input keyup",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 604,
              "column": 2
            },
            "end": {
              "line": 708,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "filterOptions",
          "description": "updates options list",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 732,
              "column": 2
            },
            "end": {
              "line": 780,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "filter"
            },
            {
              "name": "currentOption"
            }
          ]
        },
        {
          "name": "setCurrentOptionStyle",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 782,
              "column": 2
            },
            "end": {
              "line": 793,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "option"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_isSelected",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 794,
              "column": 2
            },
            "end": {
              "line": 800,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "option"
            }
          ]
        },
        {
          "name": "_onListboxMouseover",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 801,
              "column": 2
            },
            "end": {
              "line": 803,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onListboxMouseout",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 804,
              "column": 2
            },
            "end": {
              "line": 808,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "open",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 809,
              "column": 2
            },
            "end": {
              "line": 811,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "close",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 812,
              "column": 2
            },
            "end": {
              "line": 823,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "force"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onOptionClick",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 824,
              "column": 2
            },
            "end": {
              "line": 830,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            },
            {
              "name": "option"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onOptionMouseover",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 831,
              "column": 2
            },
            "end": {
              "line": 835,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            },
            {
              "name": "option"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onOptionMouseout",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 836,
              "column": 2
            },
            "end": {
              "line": 840,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            },
            {
              "name": "option"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "./demo/index.html",
          "description": "Demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 900,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "SimpleFieldsCombo",
      "attributes": [
        {
          "name": "active-descendant",
          "description": "id of active option",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 6
            },
            "end": {
              "line": 108,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "align-right",
          "description": "whether listbox is aligned on the right edge",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 6
            },
            "end": {
              "line": 116,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "expanded",
          "description": "whether listbox is expanded",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 6
            },
            "end": {
              "line": 123,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "justify",
          "description": "whether listbox is full-width",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 6
            },
            "end": {
              "line": 130,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "filter",
          "description": "input text to filter listbox options",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 6
            },
            "end": {
              "line": 136,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "filtered-options",
          "description": "aray of filtered listbox options",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "input-focus",
          "description": "whether input has focus",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 6
            },
            "end": {
              "line": 148,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "input-hover",
          "description": "whether input is hovered",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 6
            },
            "end": {
              "line": 154,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "list-focus",
          "description": "whether list has focus",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 6
            },
            "end": {
              "line": 160,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "list-hover",
          "description": "whether list is hovered",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 6
            },
            "end": {
              "line": 166,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hovered-option",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 6
            },
            "end": {
              "line": 169,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    }
  ],
  "functions": [
    {
      "name": "SimpleTagLiteSuper",
      "description": "",
      "summary": "",
      "sourceRange": {
        "file": "lib/simple-tag-lite.js",
        "start": {
          "line": 10,
          "column": 34
        },
        "end": {
          "line": 141,
          "column": 1
        }
      },
      "privacy": "public",
      "params": []
    }
  ],
  "classes": [
    {
      "description": "",
      "summary": "",
      "path": "lib/simple-fields-container.js",
      "properties": [
        {
          "name": "descriptionTemplate",
          "type": "object",
          "description": "template for slotted or shadow DOM description",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 444,
              "column": 4
            },
            "end": {
              "line": 451,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "errorTemplate",
          "type": "object",
          "description": "template for slotted or shadow DOM error message",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 460,
              "column": 4
            },
            "end": {
              "line": 471,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "fieldBottom",
          "type": "object",
          "description": "gets bottom (metadata, description, and error message) of a field",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 481,
              "column": 4
            },
            "end": {
              "line": 492,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "fieldId",
          "type": "string",
          "description": "gets field's id",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 501,
              "column": 4
            },
            "end": {
              "line": 503,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "fieldMainTemplate",
          "type": "object",
          "description": "template for slotted or shadow DOM label",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 512,
              "column": 4
            },
            "end": {
              "line": 529,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "fieldMeta",
          "type": "object",
          "description": "gets field metadata",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 538,
              "column": 4
            },
            "end": {
              "line": 544,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "hasFieldset",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 546,
              "column": 4
            },
            "end": {
              "line": 548,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "labelTemplate",
          "type": "object",
          "description": "template for slotted or shadow DOM label",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 557,
              "column": 4
            },
            "end": {
              "line": 571,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "multicheck",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 572,
              "column": 4
            },
            "end": {
              "line": 576,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "numberError",
          "type": "?",
          "description": "determines if number of items selected\nis not between min and max",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 585,
              "column": 4
            },
            "end": {
              "line": 602,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "numeric",
          "type": "boolean",
          "description": "determines if field is numeric",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 611,
              "column": 4
            },
            "end": {
              "line": 621,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "patternError",
          "type": "?",
          "description": "determines if value does not match regex pattern",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 628,
              "column": 4
            },
            "end": {
              "line": 637,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "prefixTemplate",
          "type": "object",
          "description": "template for slotted or shadow DOM prefix",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 646,
              "column": 4
            },
            "end": {
              "line": 651,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "requiredError",
          "type": "?",
          "description": "determines if field is required and blank",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 658,
              "column": 4
            },
            "end": {
              "line": 660,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "slottedFieldObserver",
          "type": "object",
          "description": "mutation observer that updates field property with slotted field\noverride for shadow DOM field",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 670,
              "column": 4
            },
            "end": {
              "line": 672,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "suffixTemplate",
          "type": "object",
          "description": "template for slotted or shadow DOM suffix",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 681,
              "column": 4
            },
            "end": {
              "line": 685,
              "column": 5
            }
          },
          "metadata": {}
        }
      ],
      "methods": [
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 4
            },
            "end": {
              "line": 151,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 385,
              "column": 4
            },
            "end": {
              "line": 388,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "autoGrow",
          "description": "makes a field autogrow",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 395,
              "column": 4
            },
            "end": {
              "line": 403,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "field",
              "defaultValue": "this.field"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "firstUpdated",
          "description": "updates slotted field",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 409,
              "column": 4
            },
            "end": {
              "line": 412,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "updated",
          "description": "updates for slotted input\noverrride for shadow DOM",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 420,
              "column": 4
            },
            "end": {
              "line": 435,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties",
              "type": "*"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "focus",
          "description": "focuses on field",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 690,
              "column": 4
            },
            "end": {
              "line": 697,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "cursorAtEnd",
          "description": "shift cursor to end of field",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 701,
              "column": 4
            },
            "end": {
              "line": 704,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "select",
          "description": "selects all text",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 710,
              "column": 4
            },
            "end": {
              "line": 713,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setRangeText",
          "description": "replaces a range of text",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 727,
              "column": 4
            },
            "end": {
              "line": 730,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "replacement",
              "type": "string",
              "description": "string to insert"
            },
            {
              "name": "start"
            },
            {
              "name": "end"
            },
            {
              "name": "selectMode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setSelectionRange",
          "description": "selects a range of text",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 740,
              "column": 4
            },
            "end": {
              "line": 747,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selectionStart"
            },
            {
              "name": "selectionEnd"
            },
            {
              "name": "selectionDirection"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "stepDown",
          "description": "decrements by a multiple of step",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 754,
              "column": 4
            },
            "end": {
              "line": 756,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n",
              "defaultValue": "1"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "stepUp",
          "description": "increments by a multiple of step",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 764,
              "column": 4
            },
            "end": {
              "line": 766,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n",
              "defaultValue": "1"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "validate",
          "description": "checks validation constraints and returns error data",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 772,
              "column": 4
            },
            "end": {
              "line": 800,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_fireErrorChanged",
          "description": "fires when error changes",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 806,
              "column": 4
            },
            "end": {
              "line": 815,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_generateUUID",
          "description": "generates a unique id",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 820,
              "column": 4
            },
            "end": {
              "line": 827,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "string",
            "desc": "unique id"
          }
        },
        {
          "name": "_getFieldsetValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 829,
              "column": 4
            },
            "end": {
              "line": 840,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_getFieldValue",
          "description": "gets the value of a field based on field type",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 847,
              "column": 4
            },
            "end": {
              "line": 867,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_getValidType",
          "description": "gets a valid version of a given type",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 875,
              "column": 4
            },
            "end": {
              "line": 882,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "string"
            }
          ],
          "return": {
            "type": "string"
          }
        },
        {
          "name": "_handleFieldChange",
          "description": "handles field changes by field type",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 888,
              "column": 4
            },
            "end": {
              "line": 893,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_observeAndListen",
          "description": "observes slotted field and listens for focusout\noverride for fields in shadow DOM",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 901,
              "column": 4
            },
            "end": {
              "line": 917,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "init",
              "defaultValue": "true"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onFocusin",
          "description": "handles focusout validation",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 923,
              "column": 4
            },
            "end": {
              "line": 925,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onFocusout",
          "description": "handles focusout validation",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 931,
              "column": 4
            },
            "end": {
              "line": 933,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateField",
          "description": "updates field an type",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 940,
              "column": 4
            },
            "end": {
              "line": 1003,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateCount",
          "description": "updates counter and sets maximum word count",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1010,
              "column": 4
            },
            "end": {
              "line": 1045,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 11,
          "column": 9
        },
        "end": {
          "line": 1046,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "SuperClass"
    },
    {
      "description": "",
      "summary": "",
      "path": "lib/simple-fields-fieldset.js",
      "properties": [
        {
          "name": "legend",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 37,
              "column": 4
            },
            "end": {
              "line": 43,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "desc",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 4
            },
            "end": {
              "line": 50,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "fields",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 4
            },
            "end": {
              "line": 61,
              "column": 5
            }
          },
          "metadata": {}
        }
      ],
      "methods": [
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 30,
              "column": 4
            },
            "end": {
              "line": 36,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 10,
          "column": 9
        },
        "end": {
          "line": 132,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "SuperClass"
    },
    {
      "description": "`simple-fields-fieldset` takes in a JSON schema of type fieldset and builds a form,\nexposing a `value` property that represents an array described by the schema.",
      "summary": "",
      "path": "lib/simple-fields-fieldset.js",
      "properties": [],
      "methods": [],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 143,
          "column": 0
        },
        "end": {
          "line": 143,
          "column": 79
        }
      },
      "privacy": "public",
      "name": "SimpleFieldsFieldset"
    },
    {
      "description": "`simple-fields-lite`\nUses JSON Schema of fields to display a series of fields\n\n### Styling\n`<simple-fields-lite>` provides following custom properties\nfor styling:\n\nCustom property | Description | Default\n----------------|-------------|--------\n`--simple-fields-margin` | vertical margin around container | 16px\n`--simple-fields-margin-small` | smaller vertical margin above field itself | 8px\n`--simple-fields-border-radius` | default border-radius | 2px\n`--simple-fields-color` | text color | black\n`--simple-fields-background-color` | background color | transparent\n`--simple-fields-error-color` | error text color | #b40000\n`--simple-fields-accent-color` | accent text/underline color | #3f51b5\n`--simple-fields-border-color` | border-/underline color | #999\n\n#### Field text\nCustom property | Description | Default\n----------------|-------------|--------\n`--simple-fields-font-size` | font-size of field | 16px\n`--simple-fields-font-family` | font-size of field | sans-serif\n`--simple-fields-line-height` | line-height of field | 22px\n\n#### Detail text\nCustom property | Description | Default\n----------------|-------------|--------\n`--simple-fields-detail-font-size` | font-size of field details | 12px\n`--simple-fields-detail-font-family` | font-size of field details | sans-serif\n`--simple-fields-detail-line-height` | line-height of field details | 22px\n\n#### Disabled Fields\nCustom property | Description | Default\n----------------|-------------|--------\n`--simple-fields-disabled-color` | disabled text color | #999\n`--simple-fields-disabled-opacity` | opacity for disabled field | 0.7\n\n### JSON Schema Format\nThis element accepts JSON schema with additional features noted in the example below:\n```\n{\n  $schema: \"http://json-schema.org/schema#\",\n  title: \"Store\",\n  type: \"object\",\n  format: \"tabs\",                                 //default object behavior can be overridden by format\n  required: [ \"name\", \"email\" ],\n    properties: {\n      settings: {\n        title: \"Settings\",\n        description: \"Configure the following.\",\n        type: \"object\",\n        format: \"tabs\",\n        properties: {\n          \"basic-input\": {\n            title: \"Basic input page\",\n            description: \"Basic contact settings\",\n            type: \"object\",\n            properties: {\n              branch: {\n                title: \"Branch\",\n                type: \"string\"\n              },\n                name: {\n                  title: \"Name\",\n                  type: \"string\"\n                },\n                address: {\n                  title: \"Address\",\n                  type: \"string\",\n                  minLength: 3\n                },\n                city: {\n                  title: \"City\",\n                  type: \"string\",\n                  minLength: 3\n                },\n                province: {\n                  title: \"Province\",\n                  type: \"string\",\n                  minLength: 2\n                },\n                country: {\n                  title: \"Country\",\n                  type: \"string\",\n                  minLength: 2\n                },\n                postalCode: {\n                  title: \"Postal/Zip Code\",\n                  type: \"string\",\n                  pattern:\n                    \"[a-zA-Z][0-9][a-zA-Z]\\\\s*[0-9][a-zA-Z][0-9]|[0-9]{5}(-[0-9]{4})?\"\n                },\n                email: {\n                  title: \"Email\",\n                  type: \"string\",\n                  pattern:\n                    \"(?:^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\\\.[A-Za-z]{2,4}$)|(?:^$)\"\n                },\n                website: {\n                  title: \"Website\",\n                  type: \"string\",\n                  format: \"uri\"\n                },\n                establishedDate: {\n                  title: \"Established Date\",\n                  type: \"string\",\n                  format: \"date\"\n                },\n                closedDate: {\n                  title: \"Closed Date\",\n                  type: [\"string\", \"null\"],\n                  format: \"date\"\n                }\n              }\n            },\n            arrays: {\n            title: \"Basic arrays page\",\n            description: \"Demonstrates arrays\",\n            type: \"object\",\n            properties: {\n              phoneNumbers: {\n                title: \"Phone numbers\",\n                description: \"List phone numbers and type of number.\",\n                type: \"array\",\n                items: {\n                  type: \"object\",\n                  previewBy: [\"phoneNumber\"],                               //simple-fields-array allows a preview field \n                                                                            //for progressive disclosure of array items\n                  properties: {\n                    type: {\n                      title: \"Type\",\n                      type: \"string\"\n                    },\n                    phoneNumber: {\n                      title: \"Phone Number\",\n                      type: \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n```\n\n### Configuring schemaConversion Property\nYou can customise elements from JSON schema conversion by setting `schemaConversion` property.\n```\ntype: {                                       //For properties in \"this.schema\", define elements based on a property's \"type\"\n  object: {                                   //Defines element used when property's \"type\" is an \"object\"\n    format: {                                 //Optional: define elements for \"object\" properties by \"format\"\n      \"tabs\": {                               //Defines element used for object properties when \"format\" is \"tabs\"\n        element: \"a11y-tabs\"                  //Element to create, eg. \"paper-input\", \"select\", \"simple-fields-array\", etc.\n        descriptionProperty: \"description\"    //Optional: element's property that sets its description, e.g. \"description\"\n        descriptionSlot: \"description\"        //Optional: element's slot that contains its description, e.g. \"description\"\n        errorProperty: \"error\"                //Optional: element's property that sets its error status, e.g. \"error\"\n        errorChangedProperty: \"error\"         //Optional: event element fires when error status changes, e.g. \"error-changed\"\n        errorMessageProperty: \"errorMessage\"  //Optional: element's property that sets its error message, e.g. \"errorMessage\"\n        errorMessageSlot: \"errorMessage\"      //Optional: element's slot that contains its error message, e.g. \"errorMessage\"\n        labelProperty: \"label\"                //Optional: element's property that sets its label, e.g. \"label\"\n        labelSlot: \"label\"                    //Optional: element's slot that contains its label, e.g. \"label\"\n        prefixSlot: \"prefix\"                  //Optional: element's slot that contains its prefix, e.g. \"prefix\"\n        suffixSlot: \"suffix\"                  //Optional: element's slot that contains its suffix, e.g. \"suffix\"\n        valueProperty: \"value\"                //Optional: element's property that gets its value, e.g. \"value\" or \"checked\"\n        setValueProperty: \"value\"             //Optional: element's property that sets its value, e.g. \"value\" or \"checked\" (default is same as valueProperty)\n        valueChangedProperty: \"value-changed\" //Optional: event element fires when value property changes, e.g. \"value-changed\" or \"click\"\n        valueSlot: \"\"                         //Optional: element's slot that's used to set its value, e.g. \"\"\n        description: \"\"                       //Optional: element that contains description, e.g. \"p\", \"span\", \"paper-tooltip\", etc.\n        child: {                              //Optional: child elements to be appended\n          element: \"a11y-tab\"                 //Optional: type of child element, eg. \"paper-input\", \"select\", \"simple-fields-array\", etc.\n          attributes: {                       //Optional: sets child element's attributes based on this.schemaConversion\n            disabled: true                    //Example: sets disabled to true  \n          } \n          properties: {                       //Optional: sets child element's attributes based on this.schema properties\n            icon: \"iconName\"                  //Example: sets child element's icon property to this.schema property's iconName \n          }, \n          slots: {                            //Optional: inserts schema properties in child element's slots\n            label: \"label\",                   //Example: places schema property's label into child element's label slot\n            \"\": \"description\"                 //Example: places schema property's description into child element's unnamed slot\n          } \n        },\n        attributes: {},\n        properties: {},\n        slots: {}\n      }\n    },\n    defaultSettings: {                        //Default element used for object properties\n      element: \"\"\n      label: \"\"\n      description: \"\"     \n      attributes: {}       \n      properties: {}       \n      slots: {}           \n    }\n  }\n}\n```",
      "summary": "",
      "path": "lib/simple-fields-lite.js",
      "properties": [
        {
          "name": "formElements",
          "type": "?",
          "description": "form elements by id",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 365,
              "column": 2
            },
            "end": {
              "line": 367,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "formElementsArray",
          "type": "?",
          "description": "list of form elements in order",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 374,
              "column": 2
            },
            "end": {
              "line": 376,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "schemaConversion",
          "type": "?",
          "description": "gets JSON schema to form element conversion object",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 383,
              "column": 2
            },
            "end": {
              "line": 525,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "valid",
          "type": "?",
          "description": "whether there are no errors",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 532,
              "column": 2
            },
            "end": {
              "line": 534,
              "column": 3
            }
          },
          "metadata": {}
        }
      ],
      "methods": [
        {
          "name": "render",
          "description": "render function",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 238,
              "column": 2
            },
            "end": {
              "line": 244,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 343,
              "column": 2
            },
            "end": {
              "line": 346,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "updated",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 348,
              "column": 2
            },
            "end": {
              "line": 358,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "updateSchema",
          "description": "updates the schema",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 538,
              "column": 2
            },
            "end": {
              "line": 540,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "getFormElementById",
          "description": "gets form element that matches given form ID",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 548,
              "column": 2
            },
            "end": {
              "line": 550,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id",
              "type": "*"
            }
          ]
        },
        {
          "name": "focus",
          "description": "focus on first field",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 554,
              "column": 2
            },
            "end": {
              "line": 567,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "rebuildForm",
          "description": "clears and rebuilds form then fires event",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 573,
              "column": 2
            },
            "end": {
              "line": 592,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_addToForm",
          "description": "converts schema properties to HTML elements and appends them",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 602,
              "column": 2
            },
            "end": {
              "line": 789,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "schema",
              "defaultValue": "this.schema"
            },
            {
              "name": "target",
              "defaultValue": "this"
            },
            {
              "name": "prefix",
              "defaultValue": "\"\""
            },
            {
              "name": "config"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_configElement",
          "description": "sets field or field wrapper element's slot or property to a value",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 799,
              "column": 2
            },
            "end": {
              "line": 812,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "target",
              "type": "object",
              "description": "element to set"
            },
            {
              "name": "value",
              "type": "*"
            },
            {
              "name": "propName",
              "type": "string",
              "description": "property name"
            },
            {
              "name": "slotName",
              "type": "string",
              "defaultValue": "false",
              "description": "slot name if any"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_insertArrayItem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 823,
              "column": 2
            },
            "end": {
              "line": 837,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "schema",
              "type": "*"
            },
            {
              "name": "previewBy",
              "type": "*"
            },
            {
              "name": "element",
              "type": "*"
            },
            {
              "name": "parent",
              "type": "*"
            },
            {
              "name": "value"
            },
            {
              "name": "index"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_addArrayItems",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 846,
              "column": 2
            },
            "end": {
              "line": 886,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "*"
            },
            {
              "name": "element",
              "type": "*"
            },
            {
              "name": "schema",
              "type": "*"
            },
            {
              "name": "parent",
              "type": "*"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_reorderArrayItems",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 888,
              "column": 2
            },
            "end": {
              "line": 909,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "parent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_addArrayItem",
          "description": "adds an array item given an array item value and array item schema",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 918,
              "column": 2
            },
            "end": {
              "line": 927,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "counter"
            },
            {
              "name": "schema",
              "type": "object",
              "description": "array item's schema"
            },
            {
              "name": "previewBy"
            },
            {
              "name": "parent",
              "type": "object",
              "defaultValue": "{}",
              "description": "array element"
            }
          ]
        },
        {
          "name": "_clearForm",
          "description": "clears form",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 931,
              "column": 2
            },
            "end": {
              "line": 934,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_convertSchema",
          "description": "matches schema property to schemaConversion settings",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 943,
              "column": 2
            },
            "end": {
              "line": 966,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "object",
              "description": "schema property"
            },
            {
              "name": "conversion",
              "type": "object",
              "defaultValue": "this.schemaConversion",
              "description": "section of schemaConversion to search"
            },
            {
              "name": "settings",
              "type": "object",
              "description": "closest current match's defaultSettings object"
            }
          ],
          "return": {
            "type": "object"
          }
        },
        {
          "name": "_deepClone",
          "description": "clones an object and all its subproperties",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 973,
              "column": 2
            },
            "end": {
              "line": 975,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "o",
              "type": "object",
              "description": "object to clone"
            }
          ],
          "return": {
            "type": "object",
            "desc": "cloned object"
          }
        },
        {
          "name": "_errorChanged",
          "description": "handles errors",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 980,
              "column": 2
            },
            "end": {
              "line": 1005,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_fireValueChanged",
          "description": "fires when value changes",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1011,
              "column": 2
            },
            "end": {
              "line": 1020,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_formFieldsChanged",
          "description": "Fires when form changes to set focus on the first field if this has auto-focus",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1026,
              "column": 2
            },
            "end": {
              "line": 1035,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getValue",
          "description": "gets value of a property",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1042,
              "column": 2
            },
            "end": {
              "line": 1054,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "propName",
              "type": "string",
              "description": "property to set"
            }
          ],
          "return": {
            "type": "*"
          }
        },
        {
          "name": "_handleChange",
          "description": "handles changes to fields",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1061,
              "column": 2
            },
            "end": {
              "line": 1079,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "element",
              "type": "object",
              "description": "element that changed"
            },
            {
              "name": "valueProperty",
              "type": "object"
            },
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_schemaChanged",
          "description": "updates form and fires event when schema changes",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1087,
              "column": 2
            },
            "end": {
              "line": 1101,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "object",
              "description": "new value for schema"
            },
            {
              "name": "oldValue",
              "type": "object",
              "description": "old value for schema"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setValue",
          "description": "sets value of a property",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1108,
              "column": 2
            },
            "end": {
              "line": 1120,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "propName",
              "type": "string",
              "description": "property to set"
            },
            {
              "name": "propVal",
              "type": "*",
              "description": "value of property"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_valueChanged",
          "description": "updates form  and fires event when value changes",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1127,
              "column": 2
            },
            "end": {
              "line": 1129,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "object",
              "description": "new value for schema"
            },
            {
              "name": "oldValue",
              "type": "object",
              "description": "old value for schema"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "./demo/lite.html",
          "description": "Demo"
        },
        {
          "url": "./demo/lite.html",
          "description": "Demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 214,
          "column": 0
        },
        "end": {
          "line": 1130,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "SimpleFieldsLite"
    },
    {
      "description": "",
      "summary": "",
      "path": "lib/simple-fields-field.js",
      "properties": [
        {
          "name": "hasFieldset",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 554,
              "column": 4
            },
            "end": {
              "line": 558,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "fieldElementTag",
          "type": "string",
          "description": "gets field element tag in shadow DOM",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 567,
              "column": 4
            },
            "end": {
              "line": 575,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "fieldMainTemplate",
          "type": "object",
          "description": "template label and field",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 584,
              "column": 4
            },
            "end": {
              "line": 610,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "fieldMeta",
          "type": "object",
          "description": "gets field metadata",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 619,
              "column": 4
            },
            "end": {
              "line": 623,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "fieldsetTemplate",
          "type": "object",
          "description": "template for `fieldset` in shadow DOM",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 632,
              "column": 4
            },
            "end": {
              "line": 687,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "inputTemplate",
          "type": "object",
          "description": "template for `input` in shadow DOM",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 787,
              "column": 4
            },
            "end": {
              "line": 789,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "multicheck",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 791,
              "column": 4
            },
            "end": {
              "line": 793,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "noOptions",
          "type": "?",
          "description": "gets whether or not the field has options",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 800,
              "column": 4
            },
            "end": {
              "line": 804,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "numberError",
          "type": "?",
          "description": "determines if number of items selected\nis not between min and max",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 812,
              "column": 4
            },
            "end": {
              "line": 819,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "sortedOptions",
          "type": "?",
          "description": "gets a sorted list of option",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 826,
              "column": 4
            },
            "end": {
              "line": 834,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "selectTemplate",
          "type": "object",
          "description": "template for `select` in shadow DOM",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 842,
              "column": 4
            },
            "end": {
              "line": 879,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "slottedFieldObserver",
          "type": "?",
          "description": "overridden mutation observer",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 887,
              "column": 4
            },
            "end": {
              "line": 887,
              "column": 33
            }
          },
          "metadata": {}
        },
        {
          "name": "textareaTemplate",
          "type": "object",
          "description": "template for `textarea` in shadow DOM",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 896,
              "column": 4
            },
            "end": {
              "line": 920,
              "column": 5
            }
          },
          "metadata": {}
        }
      ],
      "methods": [
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 337,
              "column": 4
            },
            "end": {
              "line": 339,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "firstUpdated",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 501,
              "column": 4
            },
            "end": {
              "line": 512,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_selectionShortCut",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 513,
              "column": 4
            },
            "end": {
              "line": 520,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_hoverState",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 521,
              "column": 4
            },
            "end": {
              "line": 523,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_hoverStateOff",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 524,
              "column": 4
            },
            "end": {
              "line": 526,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "updated",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 527,
              "column": 4
            },
            "end": {
              "line": 547,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "fieldValueChanged",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 549,
              "column": 4
            },
            "end": {
              "line": 552,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleIconClick",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 688,
              "column": 4
            },
            "end": {
              "line": 704,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "checked"
            },
            {
              "name": "option"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "getOptionIcon",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 705,
              "column": 4
            },
            "end": {
              "line": 713,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "checked"
            }
          ]
        },
        {
          "name": "getChecked",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 714,
              "column": 4
            },
            "end": {
              "line": 723,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "option"
            }
          ]
        },
        {
          "name": "getInput",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 724,
              "column": 4
            },
            "end": {
              "line": 778,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "option"
            }
          ]
        },
        {
          "name": "_fireValueChanged",
          "description": "fires when value changes",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 925,
              "column": 4
            },
            "end": {
              "line": 934,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleFieldChange",
          "description": "handles field changes by field type",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 939,
              "column": 4
            },
            "end": {
              "line": 945,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getAttributes",
          "description": "gets attributes that will only be set if they are defined",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 952,
              "column": 4
            },
            "end": {
              "line": 1025,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_getFieldsetValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1026,
              "column": 4
            },
            "end": {
              "line": 1028,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_observeAndListen",
          "description": "listens for focusout\noverridden for fields in shadow DOM",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1036,
              "column": 4
            },
            "end": {
              "line": 1042,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "init",
              "defaultValue": "true"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateAttribute",
          "description": "updates field attributes based on field type",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1049,
              "column": 4
            },
            "end": {
              "line": 1060,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "attribute",
              "type": "string"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateField",
          "description": "updates field an type",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1066,
              "column": 4
            },
            "end": {
              "line": 1077,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 10,
          "column": 9
        },
        "end": {
          "line": 1078,
          "column": 3
        }
      },
      "privacy": "public"
    },
    {
      "description": "`simple-fields`\nUses JSON Schema to display a series of fields\n\n ### Styling\n `<simple-fields>` provides following custom properties\n for styling:\n \n Custom property | Description | Default\n ----------------|-------------|--------\n `--simple-fields-margin` | vertical margin around container | 16px\n `--simple-fields-margin-small` | smaller vertical margin above field itself | 8px\n `--simple-fields-border-radus` | default border-radius | 2px\n `--simple-fields-color` | text color | black\n `--simple-fields-error-color` | error text color | #b40000\n `--simple-fields-accent-color` | accent text/underline color | #3f51b5\n `--simple-fields-border-color` | border-/underline color | #999\n `--simple-fields-border-color-light` | used for range tracks | #ccc\n `--simple-fields-faded-error-color` | used for range tracks | #ffc0c0\n \n #### Field text\n Custom property | Description | Default\n ----------------|-------------|--------\n `--simple-fields-font-size` | font-size of field | 16px\n `--simple-fields-font-family` | font-size of field | sans-serif\n `--simple-fields-line-height` | line-height of field | 22px\n \n #### Detail text\n Custom property | Description | Default\n ----------------|-------------|--------\n `--simple-fields-detail-font-size` | font-size of field details | 12px\n `--simple-fields-detail-font-family` | font-size of field details | sans-serif\n `--simple-fields-detail-line-height` | line-height of field details | 22px\n \n #### Disabled Fields\n Custom property | Description | Default\n ----------------|-------------|--------\n `--simple-fields-disabled-color` | disabled text color | #999\n `--simple-fields-disabled-opacity` | opacity for disabled field | 0.7\n \n #### Radio Buttons and Checkboxes\n Custom property | Description | Default\n ----------------|-------------|--------\n `--simple-fields-radio-option-display` | display label with field (flex) or above (block) | flex\n `--simple-fields-radio-option-flex-wrap` | allow radio options to wrap to next line | wrap\n \n ### Configuring schemaConversion Property\n You can customise elements from JSON schema conversion by setting `schemaConversion` property.\n ```\n type: {                                       //For properties in \"this.schema\", define elements based on a property's \"type\"\n   object: {                                   //Defines element used when property's \"type\" is an \"object\"\n     format: {                                 //Optional: define elements for \"object\" properties by \"format\"\n       \"tabs\": {                               //Defines element used for object properties when \"format\" is \"tabs\"\n         element: \"a11y-tabs\"                  //Element to create, eg. \"paper-input\", \"select\", \"simple-fields-array\", etc.\n         descriptionProperty: \"description\"    //Optional: element's property that sets its description, e.g. \"description\"\n         descriptionSlot: \"description\"        //Optional: element's slot that contains its description, e.g. \"description\"\n         errorProperty: \"error\"                //Optional: element's property that sets its error status, e.g. \"error\"\n         errorChangedProperty: \"error\"         //Optional: event element fires when error status changes, e.g. \"error-changed\"\n         errorMessageProperty: \"errorMessage\"  //Optional: element's property that sets its error message, e.g. \"errorMessage\"\n         errorMessageSlot: \"errorMessage\"      //Optional: element's slot that contains its error message, e.g. \"errorMessage\"\n         labelProperty: \"label\"                //Optional: element's property that sets its label, e.g. \"label\"\n         labelSlot: \"label\"                    //Optional: element's slot that contains its label, e.g. \"label\"\n         valueProperty: \"value\"                //Optional: element's property that gets its value, e.g. \"value\" or \"checked\"\n         setValueProperty: \"value\"             //Optional: element's property that sets its value, e.g. \"value\" or \"checked\" (default is same as valueProperty)\n         valueChangedProperty: \"value-changed\" //Optional: event element fires when value property changes, e.g. \"value-changed\" or \"click\"\n         valueSlot: \"\"                         //Optional: element's slot that's used to set its value, e.g. \"\"\n         description: \"\"                       //Optional: element that contains description, e.g. \"p\", \"span\", \"paper-tooltip\", etc.\n         child: {                              //Optional: child elements to be appended\n           element: \"a11y-tab\"                 //Optional: type of child element, eg. \"paper-input\", \"select\", \"simple-fields-array\", etc.\n           attributes: {                       //Optional: sets child element's attributes based on this.schemaConversion\n             disabled: true                    //Example: sets disabled to true  \n           } \n           properties: {                       //Optional: sets child element's attributes based on this.schema properties\n             icon: \"iconName\"                  //Example: sets child element's icon property to this.schema property's iconName \n           }, \n           slots: {                            //Optional: inserts schema properties in child element's slots\n             label: \"label\",                   //Example: places schema property's label into child element's label slot\n             \"\": \"description\"                 //Example: places schema property's description into child element's unnamed slot\n           } \n         },\n         attributes: {},\n         properties: {},\n         slots: {}\n       }\n     },\n     defaultSettings: {                        //Default element used for object properties\n       element: \"\"\n       label: \"\"\n       description: \"\"     \n       attributes: {}       \n       properties: {}       \n       slots: {}           \n     }\n   }\n }\n ``` \n ### Configuring fieldsConversion Property\n You can customise fields to JSON schema conversion by setting `fieldsConversion` property.\n ```\n defaultSettings: {            //default JSON schema type if no type is matched\n   type: \"string\"              //sets JSON schema type to string\n },\n inputMethod: {                //for fields in \"this.fields\", define elements based on a property's \"inputMethod\"\n   colorpicker: {              //settings if inputMethod is color picker\n     defaultSettings: {        //default colorpicker settings\n       type: \"string\",         //sets JSON schema type to string\n       format: \"color\"         //sets JSON schema format to color\n     }\n   }\n }\n ```",
      "summary": "",
      "path": "simple-fields.js",
      "properties": [
        {
          "name": "convertedSchema",
          "type": "?",
          "description": "fields converted to JSON schema =",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 234,
              "column": 2
            },
            "end": {
              "line": 243,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "schemaConversion",
          "type": "?",
          "description": "gets JSON schema to form element conversion object",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 250,
              "column": 2
            },
            "end": {
              "line": 656,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "fieldsConversion",
          "type": "?",
          "description": "gets fields array to JSON schema conversion object",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 663,
              "column": 2
            },
            "end": {
              "line": 842,
              "column": 3
            }
          },
          "metadata": {}
        }
      ],
      "methods": [
        {
          "name": "render",
          "description": "render function",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 2
            },
            "end": {
              "line": 157,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "updated",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 844,
              "column": 2
            },
            "end": {
              "line": 854,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setActiveTab",
          "description": "updates the active tabs object",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 861,
              "column": 2
            },
            "end": {
              "line": 867,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "tabId",
              "type": "string",
              "description": ", eg. 'settings.permisions.groups'"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setActivePath",
          "description": "sets active tabs by path, eg. 'settings/permissions/groups'",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 875,
              "column": 2
            },
            "end": {
              "line": 882,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "string",
              "description": ", eg. 'settings/permissions/groups'"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_convertField",
          "description": "matches schema property to fieldsConversion settings",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 892,
              "column": 2
            },
            "end": {
              "line": 914,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "field",
              "type": "object",
              "description": "fields array item"
            },
            {
              "name": "conversion",
              "type": "object",
              "defaultValue": "this.fieldsConversion",
              "description": "section of fieldsConverstion to search"
            },
            {
              "name": "settings",
              "type": "object",
              "defaultValue": "{}",
              "description": "closest current match's defaultSettings object"
            }
          ],
          "return": {
            "type": "object"
          }
        },
        {
          "name": "_fieldToSchema",
          "description": "converts fields array to schema properties",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 922,
              "column": 2
            },
            "end": {
              "line": 963,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "field",
              "type": "object",
              "description": "field object to convert"
            }
          ],
          "return": {
            "desc": "object schema properties"
          }
        },
        {
          "name": "fieldsToSchema",
          "description": "converts fields array to schema properties",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 971,
              "column": 2
            },
            "end": {
              "line": 984,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fields",
              "type": "*",
              "description": "fields array to convert"
            }
          ],
          "return": {
            "desc": "object schema properties"
          }
        },
        {
          "name": "_handleActiveTabs",
          "description": "handles active tabs changes",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 991,
              "column": 2
            },
            "end": {
              "line": 1000,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleActiveTab",
          "description": "updates the active tabs object",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1007,
              "column": 2
            },
            "end": {
              "line": 1010,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "./demo/index.html",
          "description": ""
        },
        {
          "url": "./demo/schema.html",
          "description": "Schema"
        },
        {
          "url": "./demo/conditional.html",
          "description": "Conditional Logic"
        },
        {
          "url": "./demo/subschema.html",
          "description": "Subschemas"
        },
        {
          "url": "./demo/form.html",
          "description": "Form"
        },
        {
          "url": "./demo/index.html",
          "description": ""
        },
        {
          "url": "./demo/schema.html",
          "description": "Schema"
        },
        {
          "url": "./demo/conditional.html",
          "description": "Conditional Logic"
        },
        {
          "url": "./demo/subschema.html",
          "description": "Subschemas"
        },
        {
          "url": "./demo/form.html",
          "description": "Form"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 126,
          "column": 0
        },
        "end": {
          "line": 1011,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "simple-fields-lite",
      "name": "SimpleFields"
    },
    {
      "description": "`simple-fields-form-lite`\nbinding and submission capabilities on top of simple-fields-lite",
      "summary": "",
      "path": "lib/simple-fields-form-lite.js",
      "properties": [
        {
          "name": "formFields",
          "type": "?",
          "description": "gets the simple-fields object",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 335,
              "column": 2
            },
            "end": {
              "line": 341,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "formElements",
          "type": "?",
          "description": "form elements by id",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 348,
              "column": 2
            },
            "end": {
              "line": 350,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "formElementsArray",
          "type": "?",
          "description": "list of form elements in order",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 357,
              "column": 2
            },
            "end": {
              "line": 359,
              "column": 3
            }
          },
          "metadata": {}
        }
      ],
      "methods": [
        {
          "name": "render",
          "description": "render function",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 26,
              "column": 2
            },
            "end": {
              "line": 46,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "getFormElementById",
          "description": "gets form element that matches given form ID",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 2
            },
            "end": {
              "line": 56,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id",
              "type": "*"
            }
          ]
        },
        {
          "name": "_valueChanged",
          "description": "updates the form value when a field changes",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 2
            },
            "end": {
              "line": 65,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "*",
              "description": "value-changed event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setValue",
          "description": "allow setting value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 2
            },
            "end": {
              "line": 71,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "rebuildForm",
          "description": "forces form rebuild",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 2
            },
            "end": {
              "line": 80,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "firstUpdated",
          "description": "first update hook; also implies default settings",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 2
            },
            "end": {
              "line": 91,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "updated",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 2
            },
            "end": {
              "line": 116,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_applyLoadedData",
          "description": "applies loaded datda to simple-fields-lite",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 2
            },
            "end": {
              "line": 127,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "loadData",
          "description": "load data from the end point",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 2
            },
            "end": {
              "line": 153,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "fetchData",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 2
            },
            "end": {
              "line": 182,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path"
            },
            {
              "name": "method"
            },
            {
              "name": "headers"
            },
            {
              "name": "body"
            }
          ]
        },
        {
          "name": "_setFieldProperties",
          "description": "allows constructor to be overridden",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 193,
              "column": 2
            },
            "end": {
              "line": 199,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setFormProperties",
          "description": "allows constructor to be overridden",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 2
            },
            "end": {
              "line": 214,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "submit",
          "description": "Submit form values if we have an end point, otherwise return value\nof the fields as they currently exist.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 219,
              "column": 2
            },
            "end": {
              "line": 230,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "./demo/form-lite.html",
          "description": ""
        },
        {
          "url": "./demo/form-lite.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 12,
          "column": 0
        },
        "end": {
          "line": 369,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "simple-fields-lite",
      "name": "SimpleFieldsFormLite"
    },
    {
      "description": "`simple-fields-form`\nbinding and submission capabilities on top of simple-fields",
      "summary": "",
      "path": "lib/simple-fields-form.js",
      "properties": [
        {
          "name": "formFields",
          "type": "?",
          "description": "gets the simple-fields object",
          "privacy": "public",
          "sourceRange": {
            "file": "simple-fields-form-lite.js",
            "start": {
              "line": 335,
              "column": 2
            },
            "end": {
              "line": 341,
              "column": 3
            }
          },
          "metadata": {},
          "inheritedFrom": "SimpleFieldsFormLite"
        },
        {
          "name": "formElements",
          "type": "?",
          "description": "form elements by id",
          "privacy": "public",
          "sourceRange": {
            "file": "simple-fields-form-lite.js",
            "start": {
              "line": 348,
              "column": 2
            },
            "end": {
              "line": 350,
              "column": 3
            }
          },
          "metadata": {},
          "inheritedFrom": "SimpleFieldsFormLite"
        },
        {
          "name": "formElementsArray",
          "type": "?",
          "description": "list of form elements in order",
          "privacy": "public",
          "sourceRange": {
            "file": "simple-fields-form-lite.js",
            "start": {
              "line": 357,
              "column": 2
            },
            "end": {
              "line": 359,
              "column": 3
            }
          },
          "metadata": {},
          "inheritedFrom": "SimpleFieldsFormLite"
        },
        {
          "name": "defaultSchemaConversion",
          "type": "?",
          "description": "gets default schemaConversion so parts of it can be overridden easily",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 2
            },
            "end": {
              "line": 96,
              "column": 3
            }
          },
          "metadata": {}
        }
      ],
      "methods": [
        {
          "name": "render",
          "description": "render function",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 16,
              "column": 2
            },
            "end": {
              "line": 38,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "getFormElementById",
          "description": "gets form element that matches given form ID",
          "privacy": "public",
          "sourceRange": {
            "file": "simple-fields-form-lite.js",
            "start": {
              "line": 54,
              "column": 2
            },
            "end": {
              "line": 56,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id",
              "type": "*"
            }
          ],
          "inheritedFrom": "SimpleFieldsFormLite"
        },
        {
          "name": "_valueChanged",
          "description": "updates the form value when a field changes",
          "privacy": "protected",
          "sourceRange": {
            "file": "simple-fields-form-lite.js",
            "start": {
              "line": 63,
              "column": 2
            },
            "end": {
              "line": 65,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "*",
              "description": "value-changed event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SimpleFieldsFormLite"
        },
        {
          "name": "setValue",
          "description": "allow setting value",
          "privacy": "public",
          "sourceRange": {
            "file": "simple-fields-form-lite.js",
            "start": {
              "line": 69,
              "column": 2
            },
            "end": {
              "line": 71,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SimpleFieldsFormLite"
        },
        {
          "name": "rebuildForm",
          "description": "forces form rebuild",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 2
            },
            "end": {
              "line": 86,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "firstUpdated",
          "description": "first update hook; also implies default settings",
          "privacy": "public",
          "sourceRange": {
            "file": "simple-fields-form-lite.js",
            "start": {
              "line": 84,
              "column": 2
            },
            "end": {
              "line": 91,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SimpleFieldsFormLite"
        },
        {
          "name": "updated",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "simple-fields-form-lite.js",
            "start": {
              "line": 92,
              "column": 2
            },
            "end": {
              "line": 116,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SimpleFieldsFormLite"
        },
        {
          "name": "_applyLoadedData",
          "description": "applies loaded datda to simple-fields-lite",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 2
            },
            "end": {
              "line": 51,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "loadData",
          "description": "load data from the end point",
          "privacy": "public",
          "sourceRange": {
            "file": "simple-fields-form-lite.js",
            "start": {
              "line": 131,
              "column": 2
            },
            "end": {
              "line": 153,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SimpleFieldsFormLite"
        },
        {
          "name": "fetchData",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "simple-fields-form-lite.js",
            "start": {
              "line": 154,
              "column": 2
            },
            "end": {
              "line": 182,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path"
            },
            {
              "name": "method"
            },
            {
              "name": "headers"
            },
            {
              "name": "body"
            }
          ],
          "inheritedFrom": "SimpleFieldsFormLite"
        },
        {
          "name": "_setFieldProperties",
          "description": "allows constructor to be overridden",
          "privacy": "protected",
          "sourceRange": {
            "file": "simple-fields-form-lite.js",
            "start": {
              "line": 193,
              "column": 2
            },
            "end": {
              "line": 199,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SimpleFieldsFormLite"
        },
        {
          "name": "_setFormProperties",
          "description": "allows constructor to be overridden",
          "privacy": "protected",
          "sourceRange": {
            "file": "simple-fields-form-lite.js",
            "start": {
              "line": 205,
              "column": 2
            },
            "end": {
              "line": 214,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SimpleFieldsFormLite"
        },
        {
          "name": "submit",
          "description": "Submit form values if we have an end point, otherwise return value\nof the fields as they currently exist.",
          "privacy": "public",
          "sourceRange": {
            "file": "simple-fields-form-lite.js",
            "start": {
              "line": 219,
              "column": 2
            },
            "end": {
              "line": 230,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "SimpleFieldsFormLite"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "./demo/form.html",
          "description": ""
        },
        {
          "url": "./demo/form.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 11,
          "column": 0
        },
        "end": {
          "line": 97,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "SimpleFieldsFormLite",
      "name": "SimpleFieldsForm"
    },
    {
      "description": "",
      "summary": "",
      "path": "lib/simple-tag-lite.js",
      "properties": [],
      "methods": [
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 4
            },
            "end": {
              "line": 126,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "clickEvent",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 4
            },
            "end": {
              "line": 139,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 11,
          "column": 9
        },
        "end": {
          "line": 140,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "SuperClass"
    },
    {
      "description": "",
      "summary": "",
      "path": "lib/simple-tag-lite.js",
      "properties": [],
      "methods": [],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 142,
          "column": 7
        },
        "end": {
          "line": 146,
          "column": 1
        }
      },
      "privacy": "public",
      "name": "SimpleTagLite"
    },
    {
      "description": "",
      "summary": "",
      "path": "lib/simple-tag.js",
      "properties": [],
      "methods": [
        {
          "name": "updated",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 13,
              "column": 2
            },
            "end": {
              "line": 26,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "calculateAccentColor",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 28,
              "column": 2
            },
            "end": {
              "line": 68,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 8,
          "column": 7
        },
        "end": {
          "line": 109,
          "column": 1
        }
      },
      "privacy": "public",
      "name": "SimpleTag"
    }
  ]
}
